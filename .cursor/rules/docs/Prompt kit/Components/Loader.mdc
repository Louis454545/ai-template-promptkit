---
description: 
globs: 
alwaysApply: true
---
# prompt-kit
Loader
------

A loading component with multiple variants to indicate processing states and provide visual feedback to users during wait times.

Examples
--------

### Basic Loader

Showcasing all available loader variants with default settings.
```
"use client"

import { Loader } from "@/components/prompt-kit/loader"

export function LoaderBasic() {
  const variants = [
    "circular",
    "classic",
    "pulse",
    "pulse-dot",
    "dots",
    "typing",
    "wave",
    "bars",
    "terminal",
    "text-blink",
    "text-shimmer",
    "loading-dots",
  ] as const

  return (
    <div className="flex w-full flex-col space-y-8 p-4">
      <div className="grid grid-cols-2 gap-8 sm:grid-cols-3 md:grid-cols-4">
        {variants.map((variant) => (
          <div
            key={variant}
            className="flex flex-col items-center justify-center gap-2 p-4"
          >
            <Loader variant={variant} />
            <span className="text-muted-foreground text-sm">{variant}</span>
          </div>
        ))}
      </div>
    </div>
  )
}

```
### Loader Sizes

Customize the size of any loader variant with predefined size options.
```
"use client"

import { Loader } from "@/components/prompt-kit/loader"
import { Button } from "@/components/ui/button"
import { useState } from "react"

export function LoaderSizes() {
  const [size, setSize] = useState<"sm" | "md" | "lg">("md")
  const variants = [
    "circular",
    "classic",
    "pulse",
    "pulse-dot",
    "dots",
    "typing",
    "wave",
    "bars",
    "terminal",
    "text-blink",
    "text-shimmer",
    "loading-dots",
  ] as const

  return (
    <div className="flex w-full flex-col">
      <div className="flex items-center justify-center gap-2 border-b py-2">
        <Button
          size="sm"
          variant={size === "sm" ? "default" : "outline"}
          onClick={() => setSize("sm")}
        >
          Small
        </Button>
        <Button
          size="sm"
          variant={size === "md" ? "default" : "outline"}
          onClick={() => setSize("md")}
        >
          Medium
        </Button>
        <Button
          size="sm"
          variant={size === "lg" ? "default" : "outline"}
          onClick={() => setSize("lg")}
        >
          Large
        </Button>
      </div>

      <div className="grid grid-cols-2 gap-8 p-4 sm:grid-cols-3 md:grid-cols-4">
        {variants.map((variant) => (
          <div
            key={variant}
            className="flex flex-col items-center justify-center gap-2 p-4"
          >
            <Loader variant={variant} size={size} />
            <span className="text-muted-foreground text-sm">{variant}</span>
          </div>
        ))}
      </div>
    </div>
  )
}

```

### Loader With Text

Some loader variants support displaying custom text while loading.

```
"use client"

import { Loader } from "@/components/prompt-kit/loader"
import { Input } from "@/components/ui/input"
import { useState } from "react"

export function LoaderWithText() {
  const [text, setText] = useState("Loading...")

  // Only include variants that support text
  const textVariants = ["text-blink", "text-shimmer", "loading-dots"] as const

  return (
    <div className="flex w-full flex-col justify-start">
      <div className="flex items-center justify-center border-b py-2">
        <Input
          value={text}
          onChange={(e) => setText(e.target.value)}
          placeholder="Enter custom text"
          className="max-w-xs"
        />
      </div>

      <div className="grid flex-1 grid-cols-1 gap-8 p-4 sm:grid-cols-2 md:grid-cols-3">
        {textVariants.map((variant) => (
          <div
            key={variant}
            className="flex flex-col items-center justify-center gap-4"
          >
            <Loader variant={variant} text={text} />
            <span className="text-muted-foreground text-sm">{variant}</span>
          </div>
        ))}
      </div>
    </div>
  )
}

```
Installation
------------

```
pnpm dlx shadcn@lastest add "https://prompt-kit.com/c/loader.json"
```


_Note: If you are using Tailwind CSS v4, you may have to grab the keyframes and add them to your global.css file manually. Check manual installation for more details._

Component API
-------------

### Loader



* Prop: variant
  * Type: "circular" | "classic" | "pulse" | "pulse-dot" | "dots" | "typing" | "wave" | "bars" | "terminal" | "text-blink" | "text-shimmer" | "loading-dots"
  * Default: "circular"
  * Description: The visual style of the loader
* Prop: size
  * Type: "sm" | "md" | "lg"
  * Default: "md"
  * Description: The size of the loader
* Prop: text
  * Type: string
  * Default: 
  * Description: Text to display (for supported variants)
* Prop: className
  * Type: string
  * Default: 
  * Description: Additional CSS classes
